-- buttplug.script

-- Use relative imports
package.path = package.path .. ';gamedata\\scripts\\buttplug\\?.lua'

buttplug = require("buttplug")

-- Set buttplug's print function to xray's printf
buttplug.print = function (arg)
    return printf("[buttplug] " .. arg)
end

-- Buttplug update interval i.e. how often it checks for new messages
local update_interval = 500 -- ms
local last_update = 0

-- Vars for controlling start/stop times for vibration
local vibrating = false
local vibrate_start_time = 0
local vibrate_stop_time = 0

-- Bone names for determining which body part got hit
local bone_names = {}

bone_names[19] = "head"
bone_names[17] = "head"
bone_names[16] = "head"
bone_names[15] = "head"
bone_names[14] = "head"
bone_names[13] = "torso"
bone_names[12] = "torso"
bone_names[11] = "torso"
bone_names[2] = "torso"
bone_names[20] = "leftarm"
bone_names[21] = "leftarm"
bone_names[22] = "leftarm"
bone_names[23] = "leftarm"
bone_names[33] = "rightarm"
bone_names[34] = "rightarm"
bone_names[35] = "rightarm"
bone_names[36] = "rightarm"
bone_names[3] = "leftleg"
bone_names[4] = "leftleg"
bone_names[7] = "rightleg"
bone_names[8] = "rightleg"

-- Caliber-based vibration strength
local ammo_power = {}

ammo_power["vog-25"] = 0.5
ammo_power["pkm"] = 0.5
ammo_power["og-7b"] = 0.5 -- RPG-7
ammo_power["magnum"] = 0.5 -- 338 lapua magnum
ammo_power["m209"] = 0.5
ammo_power["gauss"] = 0.5
ammo_power["9x39"] = 0.5
ammo_power["9x19"] = 0.5
ammo_power["9x18"] = 0.5
ammo_power["7.92x33"] = 0.5
ammo_power["7.62x54"] = 0.5
ammo_power["7.62x51"] = 0.5
ammo_power["7.62x39"] = 0.5
ammo_power["7.62x25"] = 0.5
ammo_power["50"] = 0.5 -- 50 bmg
ammo_power["5.7x28"] = 0.5
ammo_power["5.56x45"] = 0.5
ammo_power["5.45x39"] = 0.5
ammo_power["4.6x30"] = 0.5
ammo_power["357_hp"] = 0.5
ammo_power["12x76"] = 0.5
ammo_power["12x70"] = 0.5
ammo_power["12.7x55"] = 0.5
ammo_power["11.43x23"] = 0.5
-- ammo_power["knife"] = 0.5
-- ammo_power["dyno"] = 0.5
-- ammo_power["binoc"] = 0.5
-- ammo_power["batteries"] = 0.5
-- ammo_power["base"] = 0.5

-- List of gas mask equipped outfits in the game
local gas_masks = {}

-- Helmets
gas_masks["helm_resp"] = true
gas_masks["helm_ach7ex"] = true
gas_masks["helm_battle"] = true
gas_masks["helm_exo"] = true
gas_masks["helm_m40"] = true
gas_masks["helm_m50"] = true
gas_masks["helm_metro"] = true
gas_masks["helm_ppm88"] = true
gas_masks["helm_protective"] = true
gas_masks["helm_ranger"] = true
gas_masks["helm_respirator"] = true
gas_masks["helm_respirator_gp5"] = true
gas_masks["helm_respirator_old"] = true
gas_masks["helm_spartan"] = true
gas_masks["helm_tactic"] = true
-- Outfits (medium)
gas_masks["bandit_nbc_outfit"] = true
gas_masks["bandit_scientific_dark_outfit"] = true
gas_masks["bandit_scientific_outfit"] = true
gas_masks["cs_nbc_outfit"] = true
gas_masks["cs_scientific_outfit"] = true
gas_masks["cs_scientific_outfit_good"] = true
gas_masks["dolg_scientific_outfit"] = true
gas_masks["dolg_scientific_red_outfit"] = true
gas_masks["dolg_scientific_wood_outfit"] = true
gas_masks["ecolog_outfit_blue"] = true
gas_masks["ecolog_outfit_green"] = true
gas_masks["ecolog_outfit_orange"] = true
gas_masks["ecolog_outfit_red"] = true
gas_masks["ecolog_outfit_white"] = true
gas_masks["ecolog_outfit_yello"] = true
gas_masks["hybrid_outfit"] = true
gas_masks["isg_scientific_outfit"] = true
gas_masks["merc_ace_outfit"] = true
gas_masks["merc_combat_scientific_outfit"] = true
gas_masks["merc_scientific_armored_outfit"] = true
gas_masks["merc_scientific_outfit"] = true
gas_masks["monolith_nbc_outfit"] = true
gas_masks["monolith_scientific_outfit"] = true
gas_masks["nbc_dolg_outfit"] = true
gas_masks["nbc_freedom_outfit"] = true
gas_masks["nbc_outfit"] = true
gas_masks["renegade_scientific_outfit"] = true
gas_masks["scientific_outfit"] = true
gas_masks["svoboda_scientific_outfit"] = true
gas_masks["wastelander_outfit"] = true
gas_masks["nbc_merc_outfit"] = true
-- Outfits (heavy)
gas_masks["army_nosorog_outfit"] = true
gas_masks["bandit_exolight_outfit"] = true
gas_masks["cs_exolight_outfit"] = true
gas_masks["dolg_exolight_outfit"] = true
gas_masks["dolg_nosorog_outfit"] = true
gas_masks["exo_dolg_outfit"] = true
gas_masks["exo_dolg_red_outfit"] = true
gas_masks["exo_dolg_urban_outfit"] = true
gas_masks["exo_dolg_wood_outfit"] = true
gas_masks["exo_merc_grass_outfit"] = true
gas_masks["exo_merc_urban_outfit"] = true
gas_masks["exo_merc_wood_outfit"] = true
gas_masks["exo_wood_outfit"] = true
gas_masks["exolight_outfit"] = true
gas_masks["freedom_exo_vineleaf_outfit"] = true
gas_masks["freedom_nosorog_outfit"] = true
gas_masks["isg_exolight_outfit"] = true
gas_masks["isg_nosorog_outfit"] = true -- i assume theres a mask under there
gas_masks["merc_exolight_outfit"] = true
gas_masks["merc_nosorog_outfit"] = true
gas_masks["military_exolight_outfit"] = true
gas_masks["monolith_exolight_outfit"] = true
gas_masks["monolith_nosorog_outfit"] = true
gas_masks["svoboda_exolight_outfit"] = true

local function start_buttplug()
    buttplug.init("STALKER: Anomaly", "ws://127.0.0.1:12345")
    printf("[buttplug] started")
end

-- Vibrate for a fixed amount of time
local function vibrate_for(speeds, vibrate_time)
    if not vibrating then
        buttplug.send_vibrate_cmd(0, speeds)
        vibrating = true
        vibrate_start_time = time_global()
        vibrate_stop_time = vibrate_start_time + vibrate_time
    end
end

local function demo_buzz()
    vibrate_for({0.5}, 200)
end

local function actor_on_hit_callback(obj, amount, local_direction, who, bone_id)
    -- printf("[buttplug] got hit for %s in %s", amount, bone_name)
    local bone_name = bone_names[bone_id]

    vibrate_for({amount}, 500)
end

local function actor_on_weapon_fired(obj, wpn, ammo_elapsed, grenade_elapsed, ammo_type, grenade_type)
	local wpn_id = wpn:id()
	local sec = wpn:section()
	local ammo_type_number = wpn:get_ammo_type()
	local ammo_list = utils_item.get_ammo(sec, wpn_id)
	local ammo_section = ammo_list[ammo_type_number+1]

    local caliber = string.match(ammo_section, 'ammo_(.+)_.*')

    vibrate_for({ammo_power[caliber]}, 200)
end

local function actor_item_to_slot(obj)
    local equipped_item = tostring(obj:section())

    if gas_masks[equipped_item] then
        vibrate_for({0.5}, 1000)
    end
end

-- runs every tick
function update_buttplug()
    -- Stop vibrating if its time to stop
    if vibrating and (time_global() > vibrate_stop_time) then
        buttplug.send_vibrate_cmd(0, { 0.0 })
        vibrating = false
    end

    -- Only do message handling every update_interval ms
    if (time_global() < (last_update + update_interval)) then
        return
    end

    local err = buttplug.get_and_handle_message()
    if err ~= nil then
        printf("[buttplug] error: couldn't connect to buttplug server")
        printf("[buttplug] make sure the server is running, then reload your save")
        return
    end

    if not buttplug.has_devices() then
        buttplug.get_devices()
    end

    last_update = time_global()
end

function on_game_start()
    -- Required callbacks
	RegisterScriptCallback("on_game_load", start_buttplug)
    RegisterScriptCallback("actor_on_update", update_buttplug)
    -- Callbacks for everything else
    RegisterScriptCallback("actor_on_weapon_reload", demo_buzz)
	RegisterScriptCallback("actor_on_hit_callback", actor_on_hit_callback)
    RegisterScriptCallback("actor_on_weapon_fired", actor_on_weapon_fired)
    RegisterScriptCallback("actor_item_to_slot", actor_item_to_slot)
end
